//  __  __                   
// |  \/  | ___  _ __   ___  
// | |\/| |/ _ \| '_ \ / _ \ 
// | |  | | (_) | | | | (_) |
// |_|  |_|\___/|_| |_|\___/ 
//                           
// Switch Todo App - A simple todo application using the Switch framework

component TodoItem {
    state {
        id: string = "",
        text: string = "",
        completed: boolean = false
    }
    
    function constructor(id: string, text: string, completed: boolean = false) {
        this.state.id = id;
        this.state.text = text;
        this.state.completed = completed;
    }
    
    function toggle() {
        this.state.completed = !this.state.completed;
    }
    
    function render() {
        // Use the Switch framework to render the component
        switch.clientEvent("click", "handleToggle");
        
        // Create a Switch component
        var todoItem = switch.component("TodoItem", {
            id: this.state.id,
            text: this.state.text,
            completed: this.state.completed
        });
        
        // Return the HTML
        return `
            <li class="switch-list-item" data-id="${this.state.id}">
                <div class="switch-form-check">
                    <input class="switch-form-check-input" type="checkbox" id="todo-${this.state.id}" 
                           ${this.state.completed ? "checked" : ""} data-event="click" data-action="toggle">
                    <label class="switch-form-check-label ${this.state.completed ? "switch-text-muted" : ""}" for="todo-${this.state.id}">
                        ${this.state.text}
                    </label>
                    <button class="switch-button switch-button-danger switch-button-sm" data-event="click" data-action="remove" data-id="${this.state.id}">
                        Delete
                    </button>
                </div>
            </li>
        `;
    }
    
    function handleToggle(event) {
        if (event.target.dataset.action === "toggle") {
            this.toggle();
        }
    }
}

component TodoList {
    state {
        items: any[] = []
    }
    
    function constructor() {
        // Initialize with some sample items
        this.state.items = [
            new TodoItem("1", "Learn Mono", true),
            new TodoItem("2", "Build a Switch app", false),
            new TodoItem("3", "Share with the community", false)
        ];
    }
    
    function addItem(text: string) {
        var id = Date.now().toString();
        var item = new TodoItem(id, text);
        this.state.items.push(item);
    }
    
    function removeItem(id: string) {
        this.state.items = this.state.items.filter(function(item) {
            return item.state.id !== id;
        });
    }
    
    function render() {
        // Use the Switch framework to render the component
        switch.clientEvent("submit", "handleAddItem");
        switch.clientEvent("click", "handleRemoveItem");
        
        // Create a Switch component
        var todoList = switch.component("TodoList", {
            items: this.state.items.map(function(item) {
                return {
                    id: item.state.id,
                    text: item.state.text,
                    completed: item.state.completed
                };
            })
        });
        
        // Generate the items HTML
        var itemsHtml = "";
        for (var i = 0; i < this.state.items.length; i++) {
            itemsHtml += this.state.items[i].render();
        }
        
        // Return the HTML
        return `
            <div class="switch-card">
                <div class="switch-card-header">
                    <h2>Todo List</h2>
                </div>
                <div class="switch-card-body">
                    <form class="switch-form switch-mb-3" data-event="submit" data-action="add">
                        <div class="switch-form-group">
                            <input type="text" class="switch-form-control" id="new-todo" placeholder="Add a new todo">
                        </div>
                        <button type="submit" class="switch-button switch-button-primary">Add</button>
                    </form>
                    <ul class="switch-list">
                        ${itemsHtml}
                    </ul>
                </div>
            </div>
        `;
    }
    
    function handleAddItem(event) {
        if (event.target.dataset.action === "add") {
            event.preventDefault();
            var input = document.getElementById("new-todo");
            var text = input.value.trim();
            if (text) {
                this.addItem(text);
                input.value = "";
            }
        }
    }
    
    function handleRemoveItem(event) {
        if (event.target.dataset.action === "remove") {
            var id = event.target.dataset.id;
            this.removeItem(id);
        }
    }
}

component TodoApp {
    state {
        todoList: any = null
    }
    
    function constructor() {
        this.state.todoList = new TodoList();
    }
    
    function render() {
        // Use the Switch framework to render the component
        var app = switch.component("TodoApp", {
            title: "Todo App"
        });
        
        // Return the HTML
        return `
            <div class="switch-container">
                <header class="switch-header switch-mb-4">
                    <h1 class="switch-text-center">Todo App</h1>
                </header>
                <main>
                    ${this.state.todoList.render()}
                </main>
                <footer class="switch-footer switch-mt-4 switch-text-center">
                    <p>Built with the Switch framework for Mono</p>
                </footer>
            </div>
        `;
    }
}

component Main {
    function start() {
        print "=== Todo App ===";
        
        // Create the app
        var app = new TodoApp();
        
        // Render the app
        var html = switch.render("Todo App", ["/todo.js"], ["/todo.css"]);
        
        // Configure routes
        http.get("/", "handleRoot");
        http.get("/todo.js", "handleTodoJs");
        http.get("/todo.css", "handleTodoCss");
        
        // Start the server
        http.start();
    }
    
    function handleRoot(req, res) {
        print "Handling request to /";
        
        // Create the app
        var app = new TodoApp();
        
        // Render the app
        var html = switch.render("Todo App", ["/todo.js"], ["/todo.css"]);
        
        // Send the response
        res.html(html);
    }
    
    function handleTodoJs(req, res) {
        print "Handling request to /todo.js";
        
        // Send the custom JavaScript
        res.header("Content-Type", "application/javascript");
        res.text(`
            // Custom JavaScript for the Todo app
            console.log('Todo app JavaScript loaded');
            
            // Initialize the Switch router
            Switch.router.addRoute('/', function() {
                console.log('Todo app route');
            });
            
            // Add event listeners for dynamic elements
            document.addEventListener('click', function(event) {
                // Handle delete button clicks
                if (event.target.dataset.action === 'remove') {
                    console.log('Delete todo:', event.target.dataset.id);
                }
                
                // Handle checkbox clicks
                if (event.target.dataset.action === 'toggle') {
                    console.log('Toggle todo:', event.target.id.replace('todo-', ''));
                }
            });
            
            // Add form submit handler
            document.addEventListener('submit', function(event) {
                if (event.target.dataset.action === 'add') {
                    console.log('Add todo form submitted');
                }
            });
        `);
    }
    
    function handleTodoCss(req, res) {
        print "Handling request to /todo.css";
        
        // Send the custom CSS
        res.header("Content-Type", "text/css");
        res.text(`
            /* Custom CSS for the Todo app */
            body {
                background-color: #f8f9fa;
                font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
            }
            
            .switch-container {
                max-width: 800px;
                margin: 0 auto;
                padding: 1rem;
            }
            
            .switch-header {
                padding: 2rem 0;
            }
            
            .switch-footer {
                padding: 2rem 0;
                color: #6c757d;
            }
            
            .switch-text-muted {
                color: #6c757d;
                text-decoration: line-through;
            }
            
            .switch-list-item {
                display: flex;
                justify-content: space-between;
                align-items: center;
                padding: 0.75rem 1.25rem;
                background-color: #fff;
                border: 1px solid rgba(0, 0, 0, 0.125);
                margin-bottom: -1px;
            }
            
            .switch-list-item:first-child {
                border-top-left-radius: 0.25rem;
                border-top-right-radius: 0.25rem;
            }
            
            .switch-list-item:last-child {
                margin-bottom: 0;
                border-bottom-right-radius: 0.25rem;
                border-bottom-left-radius: 0.25rem;
            }
            
            .switch-form-check {
                display: flex;
                align-items: center;
                width: 100%;
            }
            
            .switch-form-check-input {
                margin-right: 0.5rem;
            }
            
            .switch-form-check-label {
                margin-bottom: 0;
                flex-grow: 1;
            }
            
            .switch-button-sm {
                padding: 0.25rem 0.5rem;
                font-size: 0.875rem;
                line-height: 1.5;
                border-radius: 0.2rem;
            }
        `);
    }
}
