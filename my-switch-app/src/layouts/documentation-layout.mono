//  __  __                   
// |  \/  | ___  _ __   ___  
// | |\/| |/ _ \| '_ \ / _ \ 
// | |  | | (_) | | | | (_) |
// |_|  |_|\___/|_| |_|\___/ 
//                           
// Documentation Layout Component

layout DocumentationLayout {
    // Define variables
    variables {
        headerHeight: 60px;
        sidebarWidth: 280px;
        tocWidth: 220px;
        footerHeight: 60px;
        contentMaxWidth: 800px;
        contentPadding: 40px;
    }

    // Define the root element
    root {
        width: 100%;
        height: 100vh;
        overflow: hidden;

        // Header
        element header {
            width: 100%;
            height: ${headerHeight};
            z-index: 100;
            constraint top: 0;
            constraint left: 0;
            background-color: #ffffff;
            border-bottom: 1px solid #e9ecef;
            display: flex;
            align-items: center;
            padding: 0 20px;
        }

        // Sidebar (navigation)
        element sidebar {
            width: ${sidebarWidth};
            height: calc(100vh - ${headerHeight} - ${footerHeight});
            z-index: 90;
            constraint top: ${headerHeight};
            constraint left: 0;
            background-color: #f8f9fa;
            border-right: 1px solid #e9ecef;
            overflow-y: auto;
            padding: 20px 0;
        }

        // Main content area
        element content {
            width: calc(100% - ${sidebarWidth} - ${tocWidth});
            height: calc(100vh - ${headerHeight} - ${footerHeight});
            constraint top: ${headerHeight};
            constraint left: ${sidebarWidth};
            overflow-y: auto;
            padding: ${contentPadding};
            display: flex;
            justify-content: center;
        }

        // Content container with max width
        element contentContainer {
            width: 100%;
            max-width: ${contentMaxWidth};
            margin: 0 auto;
        }

        // Table of contents
        element toc {
            width: ${tocWidth};
            height: calc(100vh - ${headerHeight} - ${footerHeight});
            constraint top: ${headerHeight};
            constraint right: 0;
            background-color: #ffffff;
            border-left: 1px solid #e9ecef;
            overflow-y: auto;
            padding: 30px 20px;
        }

        // Footer
        element footer {
            width: 100%;
            height: ${footerHeight};
            z-index: 100;
            constraint bottom: 0;
            constraint left: 0;
            background-color: #f8f9fa;
            border-top: 1px solid #e9ecef;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding: 0 20px;
        }

        // Documentation section
        element section {
            margin-bottom: 40px;
        }

        // Code block
        element codeBlock {
            background-color: #f8f9fa;
            border-radius: 4px;
            padding: 15px;
            margin: 15px 0;
            overflow-x: auto;
            border: 1px solid #e9ecef;
        }

        // Note block
        element note {
            background-color: #e7f5ff;
            border-left: 4px solid #339af0;
            padding: 15px;
            margin: 15px 0;
            border-radius: 0 4px 4px 0;
        }

        // Warning block
        element warning {
            background-color: #fff9db;
            border-left: 4px solid #fcc419;
            padding: 15px;
            margin: 15px 0;
            border-radius: 0 4px 4px 0;
        }
    }

    // Define responsive layouts
    media mobile (max-width: 768px) {
        root {
            element sidebar {
                width: 0;
                display: none;
            }

            element content {
                width: 100%;
                constraint left: 0;
            }

            element toc {
                width: 0;
                display: none;
            }

            element contentContainer {
                padding: 20px;
            }
        }
    }

    // Define tablet layout
    media tablet (min-width: 769px) and (max-width: 1024px) {
        root {
            element sidebar {
                width: 220px;
            }

            element content {
                width: calc(100% - 220px);
                constraint left: 220px;
            }

            element toc {
                width: 0;
                display: none;
            }
        }
    }

    // Define dark mode state
    state darkMode {
        root {
            element header {
                background-color: #343a40;
                border-bottom: 1px solid #495057;
                color: #f8f9fa;
            }

            element sidebar {
                background-color: #212529;
                border-right: 1px solid #495057;
                color: #f8f9fa;
            }

            element content {
                background-color: #2b3035;
                color: #f8f9fa;
            }

            element toc {
                background-color: #343a40;
                border-left: 1px solid #495057;
                color: #f8f9fa;
            }

            element footer {
                background-color: #212529;
                border-top: 1px solid #495057;
                color: #f8f9fa;
            }

            element codeBlock {
                background-color: #212529;
                border: 1px solid #495057;
                color: #f8f9fa;
            }

            element note {
                background-color: #1864ab;
                border-left: 4px solid #339af0;
                color: #f8f9fa;
            }

            element warning {
                background-color: #e67700;
                border-left: 4px solid #fcc419;
                color: #f8f9fa;
            }
        }
    }

    // Define print mode state
    state printMode {
        root {
            element header {
                display: none;
            }

            element sidebar {
                display: none;
            }

            element content {
                width: 100%;
                constraint left: 0;
                height: auto;
                overflow: visible;
            }

            element toc {
                display: none;
            }

            element footer {
                display: none;
            }

            element contentContainer {
                max-width: 100%;
            }
        }
    }
}

// Export the layout
export DocumentationLayout;
