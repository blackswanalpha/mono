//  __  __
// |  \/  | ___  _ __   ___
// | |\/| |/ _ \| '_ \ / _ \
// | |  | | (_) | | | | (_) |
// |_|  |_|\___/|_| |_|\___/
//
// Home Page Component

// Import the Layout component
{{ '@/components/layout.mono' }}

component HomePage {
    props {
        currentPage: string = "home"
    }

    state {
        title: string = "Welcome to Switch",
        subtitle: string = "A modern web framework for building interactive applications",
        darkMode: boolean = false,
        features: array = [
            {
                id: 1,
                title: "Component-Based",
                description: "Build UIs with reusable components.",
                icon: "puzzle-piece",
                animationDelay: 0
            },
            {
                id: 2,
                title: "State Management",
                description: "Manage application state with ease.",
                icon: "database",
                animationDelay: 100
            },
            {
                id: 3,
                title: "Routing",
                description: "Navigate between pages without full page reloads.",
                icon: "signpost-split",
                animationDelay: 200
            },
            {
                id: 4,
                title: "Package System",
                description: "Use and create reusable packages.",
                icon: "box",
                animationDelay: 300
            },
            {
                id: 5,
                title: "Kit System",
                description: "Use and create UI component kits.",
                icon: "grid",
                animationDelay: 400
            },
            {
                id: 6,
                title: "Build System",
                description: "Optimize your application for production.",
                icon: "gear",
                animationDelay: 500
            }
        ],
        navItems: array = [
            {
                type: "link",
                text: "Home",
                href: "/",
                icon: "house",
                active: true
            },
            {
                type: "link",
                text: "Tutorials",
                href: "/tutorials",
                icon: "book",
                active: false
            },
            {
                type: "link",
                text: "About",
                href: "/about",
                icon: "info-circle",
                active: false
            },
            {
                type: "link",
                text: "Feedback",
                href: "/feedback",
                icon: "chat-dots",
                active: false
            }
        ],
        rightNavItems: array = [
            {
                type: "link",
                text: "Theme",
                icon: "palette",
                onClick: "toggleDarkMode"
            }
        ]
    }

    function constructor() {
        // Check if dark mode is enabled
        this.state.darkMode = localStorage.getItem("darkMode") === "true";

        // Apply dark mode if enabled
        if (this.state.darkMode) {
            document.body.classList.add("dark-mode");
        }
    }

    function toggleDarkMode() {
        this.state.darkMode = !this.state.darkMode;
        localStorage.setItem("darkMode", this.state.darkMode.toString());
        document.body.classList.toggle("dark-mode");
    }

    function handleNavItemClick(event, item) {
        // Handle navigation
        if (item.href) {
            // Prevent default link behavior
            event.preventDefault();

            // Update the URL
            if (item.href === "/") {
                history.pushState({}, "", "/");
            } else {
                history.pushState({}, "", item.href);
            }

            // Reload the page
            window.location.reload();
        }

        // Handle actions
        if (item.onClick === "toggleDarkMode") {
            this.toggleDarkMode();
        }
    }

    function renderNavbar() {
        return `
            <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
                <div class="container">
                    <a class="navbar-brand" href="/">
                        <img src="src/static/img/switch-logo.svg" alt="Switch Logo" width="30" height="30" class="d-inline-block align-top me-2">
                        Switch
                    </a>
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div class="collapse navbar-collapse" id="navbarNav">
                        <ul class="navbar-nav me-auto">
                            ${this.renderNavItems()}
                        </ul>
                        <ul class="navbar-nav">
                            ${this.renderRightNavItems()}
                        </ul>
                    </div>
                </div>
            </nav>
        `;
    }

    function renderNavItems() {
        var html = "";

        for (var i = 0; i < this.state.navItems.length; i++) {
            var item = this.state.navItems[i];
            var activeClass = item.active ? "active" : "";

            html += `
                <li class="nav-item">
                    <a class="nav-link ${activeClass}" href="${item.href}" data-event="click" data-action="navigate" data-page="${item.href.replace('/', '')}">
                        <i class="bi bi-${item.icon} me-1"></i>
                        ${item.text}
                    </a>
                </li>
            `;
        }

        return html;
    }

    function renderRightNavItems() {
        var html = "";

        for (var i = 0; i < this.state.rightNavItems.length; i++) {
            var item = this.state.rightNavItems[i];

            if (item.onClick === "toggleDarkMode") {
                html += `
                    <li class="nav-item">
                        <a class="nav-link" href="#" onclick="toggleDarkMode(); return false;">
                            <i class="bi bi-${this.state.darkMode ? 'sun' : 'moon'} me-1"></i>
                            ${this.state.darkMode ? 'Light Mode' : 'Dark Mode'}
                        </a>
                    </li>
                `;
            } else {
                html += `
                    <li class="nav-item">
                        <a class="nav-link" href="${item.href || '#'}">
                            <i class="bi bi-${item.icon} me-1"></i>
                            ${item.text}
                        </a>
                    </li>
                `;
            }
        }

        return html;
    }

    function renderFooter() {
        return `
            <footer class="footer mt-5">
                <div class="container text-center">
                    <p class="mb-0">
                        &copy; ${new Date().getFullYear()} Switch. Built with
                        <a href="https://github.com/blackswanalpha/mono" target="_blank">Mono</a> and
                        <a href="https://github.com/blackswanalpha/mono/tree/main/switch" target="_blank">Switch</a>.
                    </p>
                </div>
            </footer>
        `;
    }

    function render() {
        // Create the component
        var homePage = switch.component("HomePage", {
            title: this.state.title,
            features: this.state.features,
            currentPage: this.props.currentPage
        });

        // Create the home page content
        var homeContent = `
            <div class="home-page">
                <div class="hero mb-5 mt-4 fade-in">
                    <div class="text-center">
                        <img src="src/static/img/switch-logo.svg" alt="Switch Logo" width="120" height="120" class="mb-4 logo-animation">
                        <h1 class="display-4 mb-3">${this.state.title}</h1>
                        <p class="lead mb-4">${this.state.subtitle}</p>
                        <div class="mb-4">
                            <button class="btn btn-primary btn-lg me-2 pulse-animation">Get Started</button>
                            <button class="btn btn-outline-secondary btn-lg">Documentation</button>
                        </div>
                    </div>
                </div>

                <div class="features-section mb-5">
                    <h2 class="text-center mb-4 slide-in">Features</h2>

                    <div class="row">
                        ${this.renderFeatures()}
                    </div>
                </div>

                <div class="quick-start-section mb-5 zoom-in">
                    <div class="card shadow">
                        <div class="card-header bg-primary text-white">
                            <h3 class="card-title mb-0">Quick Start</h3>
                        </div>
                        <div class="card-body">
                            <p>Create a new Switch application:</p>
                            <pre class="bg-light p-3 rounded"><code>switch create my-app</code></pre>

                            <p>Run the application:</p>
                            <pre class="bg-light p-3 rounded"><code>cd my-app
switch run app --reload</code></pre>

                            <p>Build for production:</p>
                            <pre class="bg-light p-3 rounded"><code>switch build app --minify --bundle --tree-shake</code></pre>
                        </div>
                    </div>
                </div>

                <style>
                    /* Animation styles */
                    .fade-in {
                        animation: fadeIn 1s ease-in-out;
                    }

                    @keyframes fadeIn {
                        from { opacity: 0; }
                        to { opacity: 1; }
                    }

                    .slide-in {
                        animation: slideIn 0.8s ease-in-out;
                    }

                    @keyframes slideIn {
                        from { transform: translateY(-20px); opacity: 0; }
                        to { transform: translateY(0); opacity: 1; }
                    }

                    .zoom-in {
                        animation: zoomIn 1s ease-in-out;
                    }

                    @keyframes zoomIn {
                        from { transform: scale(0.95); opacity: 0; }
                        to { transform: scale(1); opacity: 1; }
                    }

                    .feature-card {
                        transition: transform 0.3s ease, box-shadow 0.3s ease;
                    }

                    .feature-card:hover {
                        transform: translateY(-5px);
                        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);
                    }

                    .dark-mode .feature-card:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
                    }

                    .logo-animation {
                        animation: pulse 2s infinite ease-in-out;
                    }

                    @keyframes pulse {
                        0% { transform: scale(1); }
                        50% { transform: scale(1.05); }
                        100% { transform: scale(1); }
                    }

                    .pulse-animation {
                        animation: buttonPulse 2s infinite;
                    }

                    @keyframes buttonPulse {
                        0% { box-shadow: 0 0 0 0 rgba(98, 0, 234, 0.4); }
                        70% { box-shadow: 0 0 0 10px rgba(98, 0, 234, 0); }
                        100% { box-shadow: 0 0 0 0 rgba(98, 0, 234, 0); }
                    }

                    .feature-icon {
                        width: 48px;
                        height: 48px;
                        display: flex;
                        align-items: center;
                        justify-content: center;
                        border-radius: 50%;
                        background-color: rgba(98, 0, 234, 0.1);
                        color: var(--primary-color);
                        font-size: 1.5rem;
                        transition: all 0.3s ease;
                    }

                    .feature-card:hover .feature-icon {
                        transform: scale(1.1);
                        background-color: var(--primary-color);
                        color: white;
                    }
                </style>
            </div>
        `;

        // Use the Layout component directly
        return `
            <div class="app ${localStorage.getItem('darkMode') === 'true' ? 'dark-mode' : ''}">
                <!-- Navigation Bar -->
                <nav class="navbar navbar-expand-lg navbar-dark bg-primary">
                    <div class="container">
                        <a class="navbar-brand" href="/" data-nav="true">
                            <img src="src/static/img/switch-logo.svg" alt="Switch Logo" width="30" height="30" class="d-inline-block align-top me-2">
                            Switch
                        </a>
                        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarNav" aria-controls="navbarNav" aria-expanded="false" aria-label="Toggle navigation">
                            <span class="navbar-toggler-icon"></span>
                        </button>
                        <div class="collapse navbar-collapse" id="navbarNav">
                            <ul class="navbar-nav me-auto">
                                <li class="nav-item">
                                    <a class="nav-link active" href="#/" data-nav="true">
                                        <i class="bi bi-house me-1"></i>
                                        Home
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="#/tutorials" data-nav="true">
                                        <i class="bi bi-book me-1"></i>
                                        Tutorials
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="#/about" data-nav="true">
                                        <i class="bi bi-info-circle me-1"></i>
                                        About
                                    </a>
                                </li>
                                <li class="nav-item">
                                    <a class="nav-link" href="#/feedback" data-nav="true">
                                        <i class="bi bi-chat-dots me-1"></i>
                                        Feedback
                                    </a>
                                </li>
                            </ul>
                            <ul class="navbar-nav">
                                <li class="nav-item">
                                    <a class="nav-link" href="#" id="dark-mode-toggle">
                                        <i class="bi bi-${localStorage.getItem('darkMode') === 'true' ? 'sun' : 'moon'} me-1"></i>
                                        ${localStorage.getItem('darkMode') === 'true' ? 'Light Mode' : 'Dark Mode'}
                                    </a>
                                </li>
                            </ul>
                        </div>
                    </div>
                </nav>

                <!-- Main Content -->
                <div class="main-content">
                    <div class="content">
                        <div class="container">
                            ${homeContent}
                        </div>
                    </div>

                    <!-- Footer -->
                    <footer class="footer">
                        <div class="container text-center">
                            <p class="mb-0">
                                &copy; ${new Date().getFullYear()} Switch. Built with
                                <a href="https://github.com/blackswanalpha/mono" target="_blank">Mono</a> and
                                <a href="https://github.com/blackswanalpha/mono/tree/main/switch" target="_blank">Switch</a>.
                            </p>
                        </div>
                    </footer>
                </div>

                <script>
                    // Add event listener for dark mode toggle
                    document.addEventListener('DOMContentLoaded', function() {
                        const darkModeToggle = document.getElementById('dark-mode-toggle');
                        if (darkModeToggle) {
                            darkModeToggle.addEventListener('click', function(e) {
                                e.preventDefault();

                                // Toggle dark mode class on body
                                document.body.classList.toggle('dark-mode');

                                // Update localStorage
                                const isDarkMode = document.body.classList.contains('dark-mode');
                                localStorage.setItem('darkMode', isDarkMode);

                                // Update the icon and text
                                const icon = darkModeToggle.querySelector('i');
                                if (isDarkMode) {
                                    icon.className = 'bi bi-sun me-1';
                                    darkModeToggle.innerHTML = icon.outerHTML + ' Light Mode';
                                } else {
                                    icon.className = 'bi bi-moon me-1';
                                    darkModeToggle.innerHTML = icon.outerHTML + ' Dark Mode';
                                }
                            });
                        }
                    });
                </script>
            </div>
        `;
    }

    function renderFeatures() {
        var html = "";

        for (var i = 0; i < this.state.features.length; i++) {
            var feature = this.state.features[i];

            html += `
                <div class="col-md-4 mb-4">
                    <div class="card h-100 feature-card" style="animation: fadeIn 0.5s ease-in-out ${feature.animationDelay}ms both;">
                        <div class="card-body">
                            <div class="d-flex align-items-center mb-3">
                                <div class="feature-icon">
                                    <i class="bi bi-${feature.icon}"></i>
                                </div>
                                <h4 class="mb-0 ms-3">${feature.title}</h4>
                            </div>
                            <p class="mb-0">${feature.description}</p>
                        </div>
                    </div>
                </div>
            `;
        }

        return html;
    }
}

// Export the component
export HomePage;
